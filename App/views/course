from flask import Blueprint, render_template, jsonify, request, send_from_directory, flash, redirect, url_for
from flask_jwt_extended import jwt_required, current_user as jwt_current_user
from flask_login import login_required, login_user, current_user, logout_user

from App.controllers import{
    get_all_courses_json
    get_staff,
    get_course,
    make_course_available,
    make_course_unavailable
}

course_views = Blueprint('course_views', __name__, template_folder='../templates')

@course_views.route('/courses', methods=['GET'])
@jwt_required()
def get_all_course_action():
    courses = get_all_courses_json()
    return jsonify(courses)

@course_views.roue('/courses/<courseID>', methods=['PUT'])
jwt_required()
def make_course_available_action(courseID):
    staff = get_staff(current_user.id)
    if staff:
        course = get_course(courseID)
        if course:
            make_course_available(course)
            return jsonify({"message": f"course - {course.courseID} now available"})
        return jsonify({"error": "course does not exist bad id"}), 400
    return jsonify({"error": "User not authorized to perform this action"}), 403


@course_views.roue('/courses/<courseID>', methods=['PUT'])
jwt_required()
def make_course_unavailable_action(courseID):
    staff = get_staff(current_user.id)
    if staff:
        course = get_course(courseID)
        if course:
            make_course_unavailable(course)
            return jsonify({"message": f"course - {course.courseID} now unavailable"})
        return jsonify({"error": "course does not exist bad id"}), 400
    return jsonify({"error": "User not authorized to perform this action"}), 403

